// Endpoint para generar índice
app.post("/api/generate-index", async (req, res) => {
  try {
    const { documentType, topic, length, additionalInfo } = req.body;
    
    console.log("Datos recibidos:", req.body); // Para debugging

    if (!documentType || !topic || !length) {
      return res.status(400).json({ 
        error: "Faltan campos requeridos (documentType, topic, length)" 
      });
    }

    const response = await fetch("https://api.anthropic.com/v1/messages", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-API-Key": process.env.CLAUDE_API_KEY,
        "anthropic-version": "2023-06-01"
      },
      body: JSON.stringify({
        model: "claude-3-haiku-20240307",
        max_tokens: 4096,
        messages: [{
          role: "user",
          content: `Genera un índice para un ${documentType} sobre ${topic}. 
          El documento será de ${length}. 
          
          ${documentType.toLowerCase() === 'ensayo' ? `
          Usa esta estructura:
          [Título principal]
              1. Introducción
              2. Desarrollo
                  [3-4 Subtemas específicos]
              3. Conclusiones
              4. Bibliografía
          ` : `
          Usa una estructura más detallada con:
          - 4-6 secciones principales en numeración romana
          - 2-3 subsecciones por sección en numeración arábiga
          - Formato: 
            I. Sección principal
                1.1 Subsección
                1.2 Subsección
          `}
          
          Información adicional a considerar: ${additionalInfo || 'No hay información adicional'}
          
          Genera un índice específico al tema y mantén coherencia.
          Solo entrega el índice, sin explicaciones adicionales.`
        }]
      })
    });

    console.log("Respuesta de Claude status:", response.status); // Para debugging

    if (!response.ok) {
      const errorText = await response.text();
      console.error("Error de Claude:", errorText); // Para debugging
      throw new Error('Error en la API de Claude: ' + errorText);
    }

    const data = await response.json();
    console.log("Respuesta de Claude:", data); // Para debugging

    res.json({ index: data.content[0].text });
  } catch (error) {
    console.error("Error detallado:", error); // Para debugging
    res.status(500).json({ 
      error: "Error al generar el índice",
      details: error.message 
    });
  }
});